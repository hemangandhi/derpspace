package chess;

public class Pawn extends Piece {

	private int player;
	
	public Pawn(Tile currTile, int player) {
		super(currTile);
		
		this.player = player;
	}

	@Override
	public void drawLabel(Tile drawTo) {
		// TODO Auto-generated method stub

	}

	@Override
	public Tile[] getValidMoves() {
		Tile curr = getCurrTile();
		if(curr.getBoard().getCurrPlayer() != player || curr.getY() + 1 >= 8)
			return null;
		else{
			Tile [] toRet = new Tile[4];
			if(curr.getBoard().getGrid()[curr.getX()][curr.getY() + 1].getOccupant() == null)
				toRet[0] = curr.getBoard().getGrid()[curr.getX()][curr.getY() + 1];
			if(curr.getX() - 1 >= 0 && 
					curr.getBoard().getGrid()[curr.getX() - 1][curr.getY() + 1].getOccupant() != null)
				toRet[1] = curr.getBoard().getGrid()[curr.getX() - 1][curr.getY() + 1];
			if(curr.getX() + 1 < 8 &&
					curr.getBoard().getGrid()[curr.getX() + 1][curr.getY() + 1].getOccupant() != null)
				toRet[2] = curr.getBoard().getGrid()[curr.getX() + 1][curr.getY() + 1];
			if(curr.getY() == 1 && toRet[0] != null &&
					curr.getBoard().getGrid()[curr.getX()][curr.getY() + 2].getOccupant() == null)
				toRet[3] = curr.getBoard().getGrid()[curr.getX()][curr.getY() + 2];
			return toRet;
		}
	}

}
