cmdhistory=["(get-neighbour [0 0] [2 2])" "(get-random '(1 2 3 4))" "(make-maze 2 2)" "(make-maze 4 4)" "(get-neighbour [0 0] [2 2])" "(get-neighbour [0 0] [2 2] [])" "(make-maze 2 2)" "(get-neighbour [0 0] [2 2] [])" "(make-maze 1 1)" "(make-maze 2 2)" "(get-neighbours [1 1] [3 3] [[0 0] [2 2]])" "(get-neighbour [1 1] [3 3] [[0 0] [2 2]])" "(make-maze 2 2)" "(get-neighbour [1 1] [3 3] [])" "(union)" "(class set)" "(meta set)" "(get-neighbour [1 1] [3 3] [])" "(make-maze 2 2)" "(get-neighbour [1 1] [3 3] [[1 0] [2 1]])" "(get-random (get-neighbour [1 1] [4 4] [[1 0]]))" "(conj '() 9)" "(conj 9 '())" "(make-maze 2 2)" "(make-maze 2 3)" "(make-maze 2 2)" "(get-neighbour [2 2] [1 1] [])" "(get-neighbour [1 1] [2 2] [])" "(make-maze 2 2)" "(count '())" "(count '(1 2))" "(make-maze 2 2)" "(make-maze 3 3)" "(make-maze 2 2)" "(nil? '())" "(get-random '())" "(conj 9 '(1 2 3 4 5 6 7 8))" "(conj '(1 2 3 4 5) 6)" "(make-maze 2 2)" "(count 'hi)" "(count (get-neighbour [1 1] [3 3] []))" "(count (get-neighbour [1 1] [3 3] [[2 1] [0 1] [1 2] [0 2]]))" "(count (get-neighbour [1 1] [3 3] [[2 1] [0 1] [1 2] [1 0]]))" "(make-maze 2 2)" "(coll? 'hi)" "(or (not (coll? 'hi)) (\= 0 (count 'hi)))" "(make-maze 2 2)" "(conj '([2 3] [4 5]) [1 1])" "(conj '([[0 0] [0 1]] [[0 1] [1 1]]) [[1 1] [1 2]]\\n      )" "(get-random (get-neighbour [1 1] [3 3] []))" "(def mem '([0 0] [1 1]))" "(conj mem [2 2])" "(def conex '([[0 0] [0 1]] [[0 1] [1 1]]))" "(conj conex [[1 1] [1 2]])" "'(mem)" "mem" "(mem)" "(quote mem)" "((quote mem))" "((quote mem) 0)" "(mem 0)" "(make-maze 2 2)" "(make-maze 10 10)" "(run-maze)" "(run-maze 25 25)" "(run-maze 3 3)" "(run-maze 5 5)" "(run-maze 10 10)" "(make-maze 50 50)" "(run-maze 30 30)" "(take-first even? '())" "(take-first even? '(1 2 3 4))" "(take-first even? '(2))" "(coll? '()\\n       )" "(empty? '())" "(take-first even? '(1 2 3 4))" "(run-maze 25 25)" "(make-maze 50 50)" "(run-maze 15 15)" "(run-maze 20 20)" "(solve-maze (make-maze 25 25) [25 25] [0 0] [24 24])" "(solve-maze (make-maze 5 5) [5 5] [0 0] [4 4])" "(make-maze 5 5)" "(solve-maze (make-maze 5 5) [5 5] [0 0] [4 4])" "(solve-maze (make-maze 25 25) [25 25] [0 0] [24 24])" "(run-maze 25 25)" "(dorun (for [[[x1 y1] [x2 y2]] (solve-maze conex [width height] \\r\\n                                                                  [0 0] [(- width 1) (- height 1)])]\\r\\n                                (. graphics drawLine \\r\\n                                  (get-drawn x1)\\r\\n                                  (get-drawn y1)\\r\\n                                  (get-drawn x2)\\r\\n                                  (get-drawn y2))))" "(run-maze 25 25)" "(run-maze 15 15)" "(run-maze 20 20)" "(run-maze 2 2)" "(run-maze 5 5)" "(run-maze 10 10)" "(run-maze 30 30)" "(run-maze 15 15)" "(run-maze 35 35)" "(run-maze 40 40)" "(run-maze 50 50)" "(run-maze 25 25 )" "(run-maze 10 10)" "(run-maze 8 8)" "(run-maze 4 8)" "(run-maze 3 27)" "(run-maze 2 8)" "(run-maze 1 8)" "(run-maze 2 27)" "(run-maze 2 2)" "(run-maze 15 15)" "(run-maze 25 25)"]
eclipse.preferences.version=1
